import getRevertReason from './get-revert-reason.js'

async function watchTx (provider, promise) {
  try {
    let txRes = await promise
    if (txRes && typeof txRes.wait === 'function') {
      return await txRes.wait()
    } else {
      return txRes
    }
  } catch (err) {
    // attempt to clean up confusing errors generated by ethers
    const code = err.code
    while (err.error) {
      err = err.error
    }
    if (err.receipt) {
      const reason = await getRevertReason(provider, err.transaction)
      const message = `execution reverted${reason ? ': ' : ''}${reason}`
      err = new Error(message)
    } else if (err.reason) {
      err = new Error(err.reason)
    } else {
      err = new Error(err.message)
    }
    err.code = code
    throw err
  }
}

export default watchTx
